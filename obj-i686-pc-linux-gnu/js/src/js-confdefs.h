/* List of defines generated by configure. Included with preprocessor flag,
 * -include, to avoid long list of -D defines on the compile command-line.
 * Do not edit.
 */

#ifndef _JS_CONFDEFS_H_
#define _JS_CONFDEFS_H_

#define CPP_THROW_NEW throw()
#define D_INO d_ino
#define EDITLINE 1
#define HAVE_CPP_AMBIGUITY_RESOLVING_USING 1
#define HAVE_CPP_DYNAMIC_CAST_TO_VOID_PTR 1
#define HAVE_CPP_PARTIAL_SPECIALIZATION 1
#define HAVE_CPUID_H 1
#define HAVE_DIRENT_H 1
#define HAVE_DLADDR 1
#define HAVE_DLOPEN 1
#define HAVE_ENDIAN_H 1
#define HAVE_FCHMOD 1
#define HAVE_FLOCKFILE 1
#define HAVE_GETC_UNLOCKED 1
#define HAVE_GETOPT_H 1
#define HAVE_GETPAGESIZE 1
#define HAVE_GNU_GET_LIBC_VERSION 1
#define HAVE_GNU_LIBC_VERSION_H 1
#define HAVE_I18N_LC_MESSAGES 1
#define HAVE_LCHOWN 1
#define HAVE_LINUX_QUOTA_H 1
#define HAVE_LOCALECONV 1
#define HAVE_LOCALECONV 1
#define HAVE_LOCALTIME_R 1
#define HAVE_LSTAT64 1
#define HAVE_MALLOC_H 1
#define HAVE_MBRTOWC 1
#define HAVE_MEMMOVE 1
#define HAVE_MEMORY_H 1
#define HAVE_NL_TYPES_H 1
#define HAVE_POSIX_FALLOCATE 1
#define HAVE_RANDOM 1
#define HAVE_RES_NINIT 1
#define HAVE_SBRK 1
#define HAVE_SETLOCALE 1
#define HAVE_SIGINFO_T 1
#define HAVE_SNPRINTF 1
#define HAVE_SSIZE_T 1
#define HAVE_STAT64 1
#define HAVE_STATVFS 1
#define HAVE_STATVFS64 1
#define HAVE_STRERROR 1
#define HAVE_STRTOK_R 1
#define HAVE_ST_BLKSIZE 1
#define HAVE_SYS_BITYPES_H 1
#define HAVE_SYS_CDEFS_H 1
#define HAVE_SYS_MOUNT_H 1
#define HAVE_SYS_QUOTA_H 1
#define HAVE_SYS_STATFS_H 1
#define HAVE_SYS_STATVFS_H 1
#define HAVE_SYS_VFS_H 1
#define HAVE_THREAD_TLS_KEYWORD 1
#define HAVE_TM_ZONE_TM_GMTOFF 1
#define HAVE_TRUNCATE64 1
#define HAVE_UINT 1
#define HAVE_UNAME_DOMAINNAME_FIELD 1
#define HAVE_UNISTD_H 1
#define HAVE_VA_COPY 1
#define HAVE_VISIBILITY_ATTRIBUTE 1
#define HAVE_VISIBILITY_HIDDEN_ATTRIBUTE 1
#define HAVE_WCRTOMB 1
#define HAVE_X11_XKBLIB_H 1
#define HAVE__UNWIND_BACKTRACE 1
#define HAVE___CXA_DEMANGLE 1
#define JSGC_INCREMENTAL 1
#define JS_ALIGN_OF_POINTER 4
#define JS_BITS_PER_WORD_LOG2 5
#define JS_BYTES_PER_DOUBLE 8
#define JS_BYTES_PER_WORD 4
#define JS_CPU_X86 1
#define JS_DEFAULT_JITREPORT_GRANULARITY 3
#define JS_HAS_CTYPES 1
#define JS_HAS_XML_SUPPORT 1
#define JS_HAVE_ENDIAN_H 1
#define JS_ION 1
#define JS_METHODJIT 1
#define JS_METHODJIT_TYPED_ARRAY 1
#define JS_MONOIC 1
#define JS_NUNBOX32 1
#define JS_POLYIC 1
#define JS_THREADSAFE 1
#define MOZ_DEBUG_SYMBOLS 1
#define MOZ_DLL_SUFFIX ".so"
#define MOZ_MEMORY 1
#define MOZ_MEMORY_LINUX 1
#define MOZ_MEMORY_SIZEOF_PTR_2POW 2
#define MOZ_UPDATE_CHANNEL default
#define NEED_CPP_UNUSED_IMPLEMENTATIONS 1
#define NEW_H <new>
#define NS_ATTR_MALLOC __attribute__((malloc))
#define NS_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#define SIZEOF_INT_P 4
#define STATIC_EXPORTABLE_JS_API 1
#define STDC_HEADERS 1
#define VA_COPY va_copy
#define XP_UNIX 1
#define _REENTRANT 1

/* The c99 defining the limit macros (UINT32_MAX for example), says:
 * C++ implementations should define these macros only when __STDC_LIMIT_MACROS
 * is defined before <stdint.h> is included. */
#define __STDC_LIMIT_MACROS

#endif /* _JS_CONFDEFS_H_ */

