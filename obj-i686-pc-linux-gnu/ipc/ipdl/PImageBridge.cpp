//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/layers/PImageBridge.h"
#include "mozilla/dom/PContentParent.h"

namespace mozilla {
namespace layers {
namespace PImageBridge {

bool
Open(mozilla::dom::PContentParent* opener)
{
    return mozilla::ipc::Open(mozilla::ipc::PrivateIPDLInterface(), (opener)->GetIPCChannel(), (opener)->OtherProcess(), mozilla::ipc::Transport::MODE_SERVER, PImageBridgeMsgStart);
}
bool
Transition(
        State from,
        mozilla::ipc::Trigger trigger,
        State* next)
{
    switch (from) {
    case __Null:
    case __Error:
        return (__Null) == (from);
    case __Dead:
        NS_RUNTIMEABORT("__delete__()d actor");
        return false;
    case __Dying:
        NS_RUNTIMEABORT("__delete__()d (and unexpectedly dying) actor");
        return false;
    default:
        NS_RUNTIMEABORT("corrupted actor state");
        return false;
    }
    (*(next)) = __Error;
    return false;
}

} // namespace PImageBridge
} // namespace layers
} // namespace mozilla
