//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PContent_h
#define PContent_h

#include "mozilla/Attributes.h"
#include "base/basictypes.h"
#include "prtime.h"
#include "nscore.h"
#include "IPCMessageStart.h"
#include "ipc/IPCMessageUtils.h"
#include "nsAutoPtr.h"
#include "nsStringGlue.h"
#include "nsTArray.h"
#include "nsIFile.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/chrome/RegistryMessageUtils.h"
#include "mozilla/dom/PermissionMessageUtils.h"
#include "mozilla/dom/TabMessageUtils.h"
#include "mozilla/layout/RenderFrameUtils.h"
#include "mozilla/net/NeckoMessageUtils.h"
#include "nsGeoPositionIPCSerialiser.h"
#include "mozilla/dom/DOMTypes.h"
#include "mozilla/ipc/URIParams.h"

namespace mozilla {
namespace dom {
class PStorageParent;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PStorageChild;
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct StorageClone|
//
namespace mozilla {
namespace dom {
class StorageClone MOZ_FINAL
{
private:
    typedef mozilla::dom::PStorageParent PStorageParent;
    typedef mozilla::dom::PStorageChild PStorageChild;

public:
    StorageClone();

    StorageClone(
            PStorageParent* _actorParent,
            PStorageChild* _actorChild,
            const bool& _callerSecure)
    {
        Init();
        Assign(_actorParent, _actorChild, _callerSecure);
    }

    StorageClone(const StorageClone& _o)
    {
        Init();
        Assign(const_cast<PStorageParent*>((_o).actorParent()), const_cast<PStorageChild*>((_o).actorChild()), (_o).callerSecure());
    }

    ~StorageClone();

    void
    operator=(const StorageClone& _o)
    {
        Assign(const_cast<PStorageParent*>((_o).actorParent()), const_cast<PStorageChild*>((_o).actorChild()), (_o).callerSecure());
    }

    bool
    operator==(const StorageClone& _o) const;

    PStorageParent*&
    actorParent()
    {
        return actorParent_;
    }
    PStorageParent*
    actorParent() const
    {
        return actorParent_;
    }

    PStorageChild*&
    actorChild()
    {
        return actorChild_;
    }
    PStorageChild*
    actorChild() const
    {
        return actorChild_;
    }

    bool&
    callerSecure()
    {
        return callerSecure_;
    }
    const bool&
    callerSecure() const
    {
        return callerSecure_;
    }

private:
    void
    Init();

    void
    Assign(
            PStorageParent* _actorParent,
            PStorageChild* _actorChild,
            const bool& _callerSecure);

    PStorageParent* actorParent_;
    PStorageChild* actorChild_;
    bool callerSecure_;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class StorageClone;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |union StorageConstructData|
//
namespace mozilla {
namespace dom {
class StorageConstructData MOZ_FINAL
{
public:
    enum Type {
        T__None,
        Tnull_t = 1,
        TStorageClone,
        T__Last = TStorageClone
    };

private:
    typedef mozilla::null_t null_t;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef null_t null_t__tdef;
    typedef StorageClone StorageClone__tdef;

    union Value {
        char Vnull_t[sizeof(null_t)];
        char VStorageClone[sizeof(StorageClone)];
    };

    null_t*
    ptr_null_t()
    {
        return reinterpret_cast<null_t*>((&((mValue).Vnull_t)));
    }
    const null_t* const
    constptr_null_t() const
    {
        return reinterpret_cast<const null_t* const>((&((mValue).Vnull_t)));
    }
    StorageClone*
    ptr_StorageClone()
    {
        return reinterpret_cast<StorageClone*>((&((mValue).VStorageClone)));
    }
    const StorageClone* const
    constptr_StorageClone() const
    {
        return reinterpret_cast<const StorageClone* const>((&((mValue).VStorageClone)));
    }

    bool
    MaybeDestroy(Type aNewType);

    void
    AssertSanity() const
    {
        NS_ABORT_IF_FALSE((T__None) <= (mType), "invalid type tag");
        NS_ABORT_IF_FALSE((mType) <= (T__Last), "invalid type tag");
    }
    void
    AssertSanity(Type aType) const
    {
        AssertSanity();
        NS_ABORT_IF_FALSE((mType) == (aType), "unexpected type tag");
    }

public:
    StorageConstructData() :
        mType(T__None)
    {
    }

    StorageConstructData(const null_t& aOther);

    StorageConstructData(const StorageClone& aOther);

    StorageConstructData(const StorageConstructData& aOther);

    ~StorageConstructData();

    Type
    type() const
    {
        return mType;
    }

    StorageConstructData&
    operator=(const null_t& aRhs);

    StorageConstructData&
    operator=(const StorageClone& aRhs);

    StorageConstructData&
    operator=(const StorageConstructData& aRhs);

    bool
    operator==(const null_t& aRhs) const;

    bool
    operator==(const StorageClone& aRhs) const;

    bool
    operator==(const StorageConstructData& aRhs) const;

    null_t&
    get_null_t()
    {
        AssertSanity(Tnull_t);
        return (*(ptr_null_t()));
    }
    const null_t&
    get_null_t() const
    {
        AssertSanity(Tnull_t);
        return (*(constptr_null_t()));
    }
    operator null_t&()
    {
        return get_null_t();
    }
    operator const null_t&() const
    {
        return get_null_t();
    }

    StorageClone&
    get_StorageClone()
    {
        AssertSanity(TStorageClone);
        return (*(ptr_StorageClone()));
    }
    const StorageClone&
    get_StorageClone() const
    {
        AssertSanity(TStorageClone);
        return (*(constptr_StorageClone()));
    }
    operator StorageClone&()
    {
        return get_StorageClone();
    }
    operator const StorageClone&() const
    {
        return get_StorageClone();
    }

private:
    Value mValue;
    Type mType;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct FontListEntry|
//
namespace mozilla {
namespace dom {
class FontListEntry MOZ_FINAL
{
private:

public:
    FontListEntry();

    FontListEntry(
            const nsString& _familyName,
            const nsString& _faceName,
            const nsCString& _filepath,
            const uint16_t& _weight,
            const int16_t& _stretch,
            const uint8_t& _italic,
            const uint8_t& _index)
    {
        Init();
        Assign(_familyName, _faceName, _filepath, _weight, _stretch, _italic, _index);
    }

    FontListEntry(const FontListEntry& _o)
    {
        Init();
        Assign((_o).familyName(), (_o).faceName(), (_o).filepath(), (_o).weight(), (_o).stretch(), (_o).italic(), (_o).index());
    }

    ~FontListEntry();

    void
    operator=(const FontListEntry& _o)
    {
        Assign((_o).familyName(), (_o).faceName(), (_o).filepath(), (_o).weight(), (_o).stretch(), (_o).italic(), (_o).index());
    }

    bool
    operator==(const FontListEntry& _o) const;

    nsString&
    familyName()
    {
        return familyName_;
    }
    const nsString&
    familyName() const
    {
        return familyName_;
    }

    nsString&
    faceName()
    {
        return faceName_;
    }
    const nsString&
    faceName() const
    {
        return faceName_;
    }

    nsCString&
    filepath()
    {
        return filepath_;
    }
    const nsCString&
    filepath() const
    {
        return filepath_;
    }

    uint16_t&
    weight()
    {
        return weight_;
    }
    const uint16_t&
    weight() const
    {
        return weight_;
    }

    int16_t&
    stretch()
    {
        return stretch_;
    }
    const int16_t&
    stretch() const
    {
        return stretch_;
    }

    uint8_t&
    italic()
    {
        return italic_;
    }
    const uint8_t&
    italic() const
    {
        return italic_;
    }

    uint8_t&
    index()
    {
        return index_;
    }
    const uint8_t&
    index() const
    {
        return index_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsString& _familyName,
            const nsString& _faceName,
            const nsCString& _filepath,
            const uint16_t& _weight,
            const int16_t& _stretch,
            const uint8_t& _italic,
            const uint8_t& _index);

    nsString familyName_;
    nsString faceName_;
    nsCString filepath_;
    uint16_t weight_;
    int16_t stretch_;
    uint8_t italic_;
    uint8_t index_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct DeviceStorageStatParams|
//
namespace mozilla {
namespace dom {
class DeviceStorageStatParams MOZ_FINAL
{
private:

public:
    DeviceStorageStatParams();

    DeviceStorageStatParams(
            const nsString& _type,
            const nsString& _fullpath)
    {
        Init();
        Assign(_type, _fullpath);
    }

    DeviceStorageStatParams(const DeviceStorageStatParams& _o)
    {
        Init();
        Assign((_o).type(), (_o).fullpath());
    }

    ~DeviceStorageStatParams();

    void
    operator=(const DeviceStorageStatParams& _o)
    {
        Assign((_o).type(), (_o).fullpath());
    }

    bool
    operator==(const DeviceStorageStatParams& _o) const;

    nsString&
    type()
    {
        return type_;
    }
    const nsString&
    type() const
    {
        return type_;
    }

    nsString&
    fullpath()
    {
        return fullpath_;
    }
    const nsString&
    fullpath() const
    {
        return fullpath_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsString& _type,
            const nsString& _fullpath);

    nsString type_;
    nsString fullpath_;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBlobParent;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBlobChild;
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct DeviceStorageAddParams|
//
namespace mozilla {
namespace dom {
class DeviceStorageAddParams MOZ_FINAL
{
private:
    typedef mozilla::dom::PBlobParent PBlobParent;
    typedef mozilla::dom::PBlobChild PBlobChild;

public:
    DeviceStorageAddParams();

    DeviceStorageAddParams(
            const nsString& _type,
            PBlobParent* _blobParent,
            PBlobChild* _blobChild,
            const nsString& _name,
            const nsString& _fullpath)
    {
        Init();
        Assign(_type, _blobParent, _blobChild, _name, _fullpath);
    }

    DeviceStorageAddParams(const DeviceStorageAddParams& _o)
    {
        Init();
        Assign((_o).type(), const_cast<PBlobParent*>((_o).blobParent()), const_cast<PBlobChild*>((_o).blobChild()), (_o).name(), (_o).fullpath());
    }

    ~DeviceStorageAddParams();

    void
    operator=(const DeviceStorageAddParams& _o)
    {
        Assign((_o).type(), const_cast<PBlobParent*>((_o).blobParent()), const_cast<PBlobChild*>((_o).blobChild()), (_o).name(), (_o).fullpath());
    }

    bool
    operator==(const DeviceStorageAddParams& _o) const;

    nsString&
    type()
    {
        return type_;
    }
    const nsString&
    type() const
    {
        return type_;
    }

    PBlobParent*&
    blobParent()
    {
        return blobParent_;
    }
    PBlobParent*
    blobParent() const
    {
        return blobParent_;
    }

    PBlobChild*&
    blobChild()
    {
        return blobChild_;
    }
    PBlobChild*
    blobChild() const
    {
        return blobChild_;
    }

    nsString&
    name()
    {
        return name_;
    }
    const nsString&
    name() const
    {
        return name_;
    }

    nsString&
    fullpath()
    {
        return fullpath_;
    }
    const nsString&
    fullpath() const
    {
        return fullpath_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsString& _type,
            PBlobParent* _blobParent,
            PBlobChild* _blobChild,
            const nsString& _name,
            const nsString& _fullpath);

    nsString type_;
    PBlobParent* blobParent_;
    PBlobChild* blobChild_;
    nsString name_;
    nsString fullpath_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct DeviceStorageGetParams|
//
namespace mozilla {
namespace dom {
class DeviceStorageGetParams MOZ_FINAL
{
private:

public:
    DeviceStorageGetParams();

    DeviceStorageGetParams(
            const nsString& _type,
            const nsString& _name,
            const nsString& _fullpath)
    {
        Init();
        Assign(_type, _name, _fullpath);
    }

    DeviceStorageGetParams(const DeviceStorageGetParams& _o)
    {
        Init();
        Assign((_o).type(), (_o).name(), (_o).fullpath());
    }

    ~DeviceStorageGetParams();

    void
    operator=(const DeviceStorageGetParams& _o)
    {
        Assign((_o).type(), (_o).name(), (_o).fullpath());
    }

    bool
    operator==(const DeviceStorageGetParams& _o) const;

    nsString&
    type()
    {
        return type_;
    }
    const nsString&
    type() const
    {
        return type_;
    }

    nsString&
    name()
    {
        return name_;
    }
    const nsString&
    name() const
    {
        return name_;
    }

    nsString&
    fullpath()
    {
        return fullpath_;
    }
    const nsString&
    fullpath() const
    {
        return fullpath_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsString& _type,
            const nsString& _name,
            const nsString& _fullpath);

    nsString type_;
    nsString name_;
    nsString fullpath_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct DeviceStorageDeleteParams|
//
namespace mozilla {
namespace dom {
class DeviceStorageDeleteParams MOZ_FINAL
{
private:

public:
    DeviceStorageDeleteParams();

    DeviceStorageDeleteParams(
            const nsString& _type,
            const nsString& _fullpath)
    {
        Init();
        Assign(_type, _fullpath);
    }

    DeviceStorageDeleteParams(const DeviceStorageDeleteParams& _o)
    {
        Init();
        Assign((_o).type(), (_o).fullpath());
    }

    ~DeviceStorageDeleteParams();

    void
    operator=(const DeviceStorageDeleteParams& _o)
    {
        Assign((_o).type(), (_o).fullpath());
    }

    bool
    operator==(const DeviceStorageDeleteParams& _o) const;

    nsString&
    type()
    {
        return type_;
    }
    const nsString&
    type() const
    {
        return type_;
    }

    nsString&
    fullpath()
    {
        return fullpath_;
    }
    const nsString&
    fullpath() const
    {
        return fullpath_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsString& _type,
            const nsString& _fullpath);

    nsString type_;
    nsString fullpath_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct DeviceStorageEnumerationParams|
//
namespace mozilla {
namespace dom {
class DeviceStorageEnumerationParams MOZ_FINAL
{
private:

public:
    DeviceStorageEnumerationParams();

    DeviceStorageEnumerationParams(
            const nsString& _type,
            const nsString& _fullpath,
            const uint64_t& _since)
    {
        Init();
        Assign(_type, _fullpath, _since);
    }

    DeviceStorageEnumerationParams(const DeviceStorageEnumerationParams& _o)
    {
        Init();
        Assign((_o).type(), (_o).fullpath(), (_o).since());
    }

    ~DeviceStorageEnumerationParams();

    void
    operator=(const DeviceStorageEnumerationParams& _o)
    {
        Assign((_o).type(), (_o).fullpath(), (_o).since());
    }

    bool
    operator==(const DeviceStorageEnumerationParams& _o) const;

    nsString&
    type()
    {
        return type_;
    }
    const nsString&
    type() const
    {
        return type_;
    }

    nsString&
    fullpath()
    {
        return fullpath_;
    }
    const nsString&
    fullpath() const
    {
        return fullpath_;
    }

    uint64_t&
    since()
    {
        return since_;
    }
    const uint64_t&
    since() const
    {
        return since_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsString& _type,
            const nsString& _fullpath,
            const uint64_t& _since);

    nsString type_;
    nsString fullpath_;
    uint64_t since_;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class DeviceStorageAddParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class DeviceStorageGetParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class DeviceStorageDeleteParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class DeviceStorageEnumerationParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class DeviceStorageStatParams;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |union DeviceStorageParams|
//
namespace mozilla {
namespace dom {
class DeviceStorageParams MOZ_FINAL
{
public:
    enum Type {
        T__None,
        TDeviceStorageAddParams = 1,
        TDeviceStorageGetParams,
        TDeviceStorageDeleteParams,
        TDeviceStorageEnumerationParams,
        TDeviceStorageStatParams,
        T__Last = TDeviceStorageStatParams
    };

private:
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef DeviceStorageAddParams DeviceStorageAddParams__tdef;
    typedef DeviceStorageGetParams DeviceStorageGetParams__tdef;
    typedef DeviceStorageDeleteParams DeviceStorageDeleteParams__tdef;
    typedef DeviceStorageEnumerationParams DeviceStorageEnumerationParams__tdef;
    typedef DeviceStorageStatParams DeviceStorageStatParams__tdef;

    union Value {
        char VDeviceStorageAddParams[sizeof(DeviceStorageAddParams)];
        char VDeviceStorageGetParams[sizeof(DeviceStorageGetParams)];
        char VDeviceStorageDeleteParams[sizeof(DeviceStorageDeleteParams)];
        char VDeviceStorageEnumerationParams[sizeof(DeviceStorageEnumerationParams)];
        char VDeviceStorageStatParams[sizeof(DeviceStorageStatParams)];
    };

    DeviceStorageAddParams*
    ptr_DeviceStorageAddParams()
    {
        return reinterpret_cast<DeviceStorageAddParams*>((&((mValue).VDeviceStorageAddParams)));
    }
    const DeviceStorageAddParams* const
    constptr_DeviceStorageAddParams() const
    {
        return reinterpret_cast<const DeviceStorageAddParams* const>((&((mValue).VDeviceStorageAddParams)));
    }
    DeviceStorageGetParams*
    ptr_DeviceStorageGetParams()
    {
        return reinterpret_cast<DeviceStorageGetParams*>((&((mValue).VDeviceStorageGetParams)));
    }
    const DeviceStorageGetParams* const
    constptr_DeviceStorageGetParams() const
    {
        return reinterpret_cast<const DeviceStorageGetParams* const>((&((mValue).VDeviceStorageGetParams)));
    }
    DeviceStorageDeleteParams*
    ptr_DeviceStorageDeleteParams()
    {
        return reinterpret_cast<DeviceStorageDeleteParams*>((&((mValue).VDeviceStorageDeleteParams)));
    }
    const DeviceStorageDeleteParams* const
    constptr_DeviceStorageDeleteParams() const
    {
        return reinterpret_cast<const DeviceStorageDeleteParams* const>((&((mValue).VDeviceStorageDeleteParams)));
    }
    DeviceStorageEnumerationParams*
    ptr_DeviceStorageEnumerationParams()
    {
        return reinterpret_cast<DeviceStorageEnumerationParams*>((&((mValue).VDeviceStorageEnumerationParams)));
    }
    const DeviceStorageEnumerationParams* const
    constptr_DeviceStorageEnumerationParams() const
    {
        return reinterpret_cast<const DeviceStorageEnumerationParams* const>((&((mValue).VDeviceStorageEnumerationParams)));
    }
    DeviceStorageStatParams*
    ptr_DeviceStorageStatParams()
    {
        return reinterpret_cast<DeviceStorageStatParams*>((&((mValue).VDeviceStorageStatParams)));
    }
    const DeviceStorageStatParams* const
    constptr_DeviceStorageStatParams() const
    {
        return reinterpret_cast<const DeviceStorageStatParams* const>((&((mValue).VDeviceStorageStatParams)));
    }

    bool
    MaybeDestroy(Type aNewType);

    void
    AssertSanity() const
    {
        NS_ABORT_IF_FALSE((T__None) <= (mType), "invalid type tag");
        NS_ABORT_IF_FALSE((mType) <= (T__Last), "invalid type tag");
    }
    void
    AssertSanity(Type aType) const
    {
        AssertSanity();
        NS_ABORT_IF_FALSE((mType) == (aType), "unexpected type tag");
    }

public:
    DeviceStorageParams() :
        mType(T__None)
    {
    }

    DeviceStorageParams(const DeviceStorageAddParams& aOther);

    DeviceStorageParams(const DeviceStorageGetParams& aOther);

    DeviceStorageParams(const DeviceStorageDeleteParams& aOther);

    DeviceStorageParams(const DeviceStorageEnumerationParams& aOther);

    DeviceStorageParams(const DeviceStorageStatParams& aOther);

    DeviceStorageParams(const DeviceStorageParams& aOther);

    ~DeviceStorageParams();

    Type
    type() const
    {
        return mType;
    }

    DeviceStorageParams&
    operator=(const DeviceStorageAddParams& aRhs);

    DeviceStorageParams&
    operator=(const DeviceStorageGetParams& aRhs);

    DeviceStorageParams&
    operator=(const DeviceStorageDeleteParams& aRhs);

    DeviceStorageParams&
    operator=(const DeviceStorageEnumerationParams& aRhs);

    DeviceStorageParams&
    operator=(const DeviceStorageStatParams& aRhs);

    DeviceStorageParams&
    operator=(const DeviceStorageParams& aRhs);

    bool
    operator==(const DeviceStorageAddParams& aRhs) const;

    bool
    operator==(const DeviceStorageGetParams& aRhs) const;

    bool
    operator==(const DeviceStorageDeleteParams& aRhs) const;

    bool
    operator==(const DeviceStorageEnumerationParams& aRhs) const;

    bool
    operator==(const DeviceStorageStatParams& aRhs) const;

    bool
    operator==(const DeviceStorageParams& aRhs) const;

    DeviceStorageAddParams&
    get_DeviceStorageAddParams()
    {
        AssertSanity(TDeviceStorageAddParams);
        return (*(ptr_DeviceStorageAddParams()));
    }
    const DeviceStorageAddParams&
    get_DeviceStorageAddParams() const
    {
        AssertSanity(TDeviceStorageAddParams);
        return (*(constptr_DeviceStorageAddParams()));
    }
    operator DeviceStorageAddParams&()
    {
        return get_DeviceStorageAddParams();
    }
    operator const DeviceStorageAddParams&() const
    {
        return get_DeviceStorageAddParams();
    }

    DeviceStorageGetParams&
    get_DeviceStorageGetParams()
    {
        AssertSanity(TDeviceStorageGetParams);
        return (*(ptr_DeviceStorageGetParams()));
    }
    const DeviceStorageGetParams&
    get_DeviceStorageGetParams() const
    {
        AssertSanity(TDeviceStorageGetParams);
        return (*(constptr_DeviceStorageGetParams()));
    }
    operator DeviceStorageGetParams&()
    {
        return get_DeviceStorageGetParams();
    }
    operator const DeviceStorageGetParams&() const
    {
        return get_DeviceStorageGetParams();
    }

    DeviceStorageDeleteParams&
    get_DeviceStorageDeleteParams()
    {
        AssertSanity(TDeviceStorageDeleteParams);
        return (*(ptr_DeviceStorageDeleteParams()));
    }
    const DeviceStorageDeleteParams&
    get_DeviceStorageDeleteParams() const
    {
        AssertSanity(TDeviceStorageDeleteParams);
        return (*(constptr_DeviceStorageDeleteParams()));
    }
    operator DeviceStorageDeleteParams&()
    {
        return get_DeviceStorageDeleteParams();
    }
    operator const DeviceStorageDeleteParams&() const
    {
        return get_DeviceStorageDeleteParams();
    }

    DeviceStorageEnumerationParams&
    get_DeviceStorageEnumerationParams()
    {
        AssertSanity(TDeviceStorageEnumerationParams);
        return (*(ptr_DeviceStorageEnumerationParams()));
    }
    const DeviceStorageEnumerationParams&
    get_DeviceStorageEnumerationParams() const
    {
        AssertSanity(TDeviceStorageEnumerationParams);
        return (*(constptr_DeviceStorageEnumerationParams()));
    }
    operator DeviceStorageEnumerationParams&()
    {
        return get_DeviceStorageEnumerationParams();
    }
    operator const DeviceStorageEnumerationParams&() const
    {
        return get_DeviceStorageEnumerationParams();
    }

    DeviceStorageStatParams&
    get_DeviceStorageStatParams()
    {
        AssertSanity(TDeviceStorageStatParams);
        return (*(ptr_DeviceStorageStatParams()));
    }
    const DeviceStorageStatParams&
    get_DeviceStorageStatParams() const
    {
        AssertSanity(TDeviceStorageStatParams);
        return (*(constptr_DeviceStorageStatParams()));
    }
    operator DeviceStorageStatParams&()
    {
        return get_DeviceStorageStatParams();
    }
    operator const DeviceStorageStatParams&() const
    {
        return get_DeviceStorageStatParams();
    }

private:
    Value mValue;
    Type mType;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBlobParent;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBlobChild;
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct SlicedBlobConstructorParams|
//
namespace mozilla {
namespace dom {
class SlicedBlobConstructorParams MOZ_FINAL
{
private:
    typedef mozilla::dom::PBlobParent PBlobParent;
    typedef mozilla::dom::PBlobChild PBlobChild;

public:
    SlicedBlobConstructorParams();

    SlicedBlobConstructorParams(
            PBlobParent* _sourceParent,
            PBlobChild* _sourceChild,
            const uint64_t& _begin,
            const uint64_t& _end,
            const nsString& _contentType)
    {
        Init();
        Assign(_sourceParent, _sourceChild, _begin, _end, _contentType);
    }

    SlicedBlobConstructorParams(const SlicedBlobConstructorParams& _o)
    {
        Init();
        Assign(const_cast<PBlobParent*>((_o).sourceParent()), const_cast<PBlobChild*>((_o).sourceChild()), (_o).begin(), (_o).end(), (_o).contentType());
    }

    ~SlicedBlobConstructorParams();

    void
    operator=(const SlicedBlobConstructorParams& _o)
    {
        Assign(const_cast<PBlobParent*>((_o).sourceParent()), const_cast<PBlobChild*>((_o).sourceChild()), (_o).begin(), (_o).end(), (_o).contentType());
    }

    bool
    operator==(const SlicedBlobConstructorParams& _o) const;

    PBlobParent*&
    sourceParent()
    {
        return sourceParent_;
    }
    PBlobParent*
    sourceParent() const
    {
        return sourceParent_;
    }

    PBlobChild*&
    sourceChild()
    {
        return sourceChild_;
    }
    PBlobChild*
    sourceChild() const
    {
        return sourceChild_;
    }

    uint64_t&
    begin()
    {
        return begin_;
    }
    const uint64_t&
    begin() const
    {
        return begin_;
    }

    uint64_t&
    end()
    {
        return end_;
    }
    const uint64_t&
    end() const
    {
        return end_;
    }

    nsString&
    contentType()
    {
        return contentType_;
    }
    const nsString&
    contentType() const
    {
        return contentType_;
    }

private:
    void
    Init();

    void
    Assign(
            PBlobParent* _sourceParent,
            PBlobChild* _sourceChild,
            const uint64_t& _begin,
            const uint64_t& _end,
            const nsString& _contentType);

    PBlobParent* sourceParent_;
    PBlobChild* sourceChild_;
    uint64_t begin_;
    uint64_t end_;
    nsString contentType_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct MysteryBlobConstructorParams|
//
namespace mozilla {
namespace dom {
class MysteryBlobConstructorParams MOZ_FINAL
{
private:

public:
    MysteryBlobConstructorParams()
    {
        Init();
        Assign();
    }

    MysteryBlobConstructorParams(const MysteryBlobConstructorParams& _o)
    {
        Init();
        Assign();
    }

    ~MysteryBlobConstructorParams();

    void
    operator=(const MysteryBlobConstructorParams& _o)
    {
        Assign();
    }

    bool
    operator==(const MysteryBlobConstructorParams& _o) const;

private:
    void
    Init();

    void
    Assign();

};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class NormalBlobConstructorParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class FileBlobConstructorParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class SlicedBlobConstructorParams;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class MysteryBlobConstructorParams;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |union BlobConstructorParams|
//
namespace mozilla {
namespace dom {
class BlobConstructorParams MOZ_FINAL
{
public:
    enum Type {
        T__None,
        TNormalBlobConstructorParams = 1,
        TFileBlobConstructorParams,
        TSlicedBlobConstructorParams,
        TMysteryBlobConstructorParams,
        T__Last = TMysteryBlobConstructorParams
    };

private:
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef NormalBlobConstructorParams NormalBlobConstructorParams__tdef;
    typedef FileBlobConstructorParams FileBlobConstructorParams__tdef;
    typedef SlicedBlobConstructorParams SlicedBlobConstructorParams__tdef;
    typedef MysteryBlobConstructorParams MysteryBlobConstructorParams__tdef;

    union Value {
        char VNormalBlobConstructorParams[sizeof(NormalBlobConstructorParams)];
        char VFileBlobConstructorParams[sizeof(FileBlobConstructorParams)];
        char VSlicedBlobConstructorParams[sizeof(SlicedBlobConstructorParams)];
        char VMysteryBlobConstructorParams[sizeof(MysteryBlobConstructorParams)];
    };

    NormalBlobConstructorParams*
    ptr_NormalBlobConstructorParams()
    {
        return reinterpret_cast<NormalBlobConstructorParams*>((&((mValue).VNormalBlobConstructorParams)));
    }
    const NormalBlobConstructorParams* const
    constptr_NormalBlobConstructorParams() const
    {
        return reinterpret_cast<const NormalBlobConstructorParams* const>((&((mValue).VNormalBlobConstructorParams)));
    }
    FileBlobConstructorParams*
    ptr_FileBlobConstructorParams()
    {
        return reinterpret_cast<FileBlobConstructorParams*>((&((mValue).VFileBlobConstructorParams)));
    }
    const FileBlobConstructorParams* const
    constptr_FileBlobConstructorParams() const
    {
        return reinterpret_cast<const FileBlobConstructorParams* const>((&((mValue).VFileBlobConstructorParams)));
    }
    SlicedBlobConstructorParams*
    ptr_SlicedBlobConstructorParams()
    {
        return reinterpret_cast<SlicedBlobConstructorParams*>((&((mValue).VSlicedBlobConstructorParams)));
    }
    const SlicedBlobConstructorParams* const
    constptr_SlicedBlobConstructorParams() const
    {
        return reinterpret_cast<const SlicedBlobConstructorParams* const>((&((mValue).VSlicedBlobConstructorParams)));
    }
    MysteryBlobConstructorParams*
    ptr_MysteryBlobConstructorParams()
    {
        return reinterpret_cast<MysteryBlobConstructorParams*>((&((mValue).VMysteryBlobConstructorParams)));
    }
    const MysteryBlobConstructorParams* const
    constptr_MysteryBlobConstructorParams() const
    {
        return reinterpret_cast<const MysteryBlobConstructorParams* const>((&((mValue).VMysteryBlobConstructorParams)));
    }

    bool
    MaybeDestroy(Type aNewType);

    void
    AssertSanity() const
    {
        NS_ABORT_IF_FALSE((T__None) <= (mType), "invalid type tag");
        NS_ABORT_IF_FALSE((mType) <= (T__Last), "invalid type tag");
    }
    void
    AssertSanity(Type aType) const
    {
        AssertSanity();
        NS_ABORT_IF_FALSE((mType) == (aType), "unexpected type tag");
    }

public:
    BlobConstructorParams() :
        mType(T__None)
    {
    }

    BlobConstructorParams(const NormalBlobConstructorParams& aOther);

    BlobConstructorParams(const FileBlobConstructorParams& aOther);

    BlobConstructorParams(const SlicedBlobConstructorParams& aOther);

    BlobConstructorParams(const MysteryBlobConstructorParams& aOther);

    BlobConstructorParams(const BlobConstructorParams& aOther);

    ~BlobConstructorParams();

    Type
    type() const
    {
        return mType;
    }

    BlobConstructorParams&
    operator=(const NormalBlobConstructorParams& aRhs);

    BlobConstructorParams&
    operator=(const FileBlobConstructorParams& aRhs);

    BlobConstructorParams&
    operator=(const SlicedBlobConstructorParams& aRhs);

    BlobConstructorParams&
    operator=(const MysteryBlobConstructorParams& aRhs);

    BlobConstructorParams&
    operator=(const BlobConstructorParams& aRhs);

    bool
    operator==(const NormalBlobConstructorParams& aRhs) const;

    bool
    operator==(const FileBlobConstructorParams& aRhs) const;

    bool
    operator==(const SlicedBlobConstructorParams& aRhs) const;

    bool
    operator==(const MysteryBlobConstructorParams& aRhs) const;

    bool
    operator==(const BlobConstructorParams& aRhs) const;

    NormalBlobConstructorParams&
    get_NormalBlobConstructorParams()
    {
        AssertSanity(TNormalBlobConstructorParams);
        return (*(ptr_NormalBlobConstructorParams()));
    }
    const NormalBlobConstructorParams&
    get_NormalBlobConstructorParams() const
    {
        AssertSanity(TNormalBlobConstructorParams);
        return (*(constptr_NormalBlobConstructorParams()));
    }
    operator NormalBlobConstructorParams&()
    {
        return get_NormalBlobConstructorParams();
    }
    operator const NormalBlobConstructorParams&() const
    {
        return get_NormalBlobConstructorParams();
    }

    FileBlobConstructorParams&
    get_FileBlobConstructorParams()
    {
        AssertSanity(TFileBlobConstructorParams);
        return (*(ptr_FileBlobConstructorParams()));
    }
    const FileBlobConstructorParams&
    get_FileBlobConstructorParams() const
    {
        AssertSanity(TFileBlobConstructorParams);
        return (*(constptr_FileBlobConstructorParams()));
    }
    operator FileBlobConstructorParams&()
    {
        return get_FileBlobConstructorParams();
    }
    operator const FileBlobConstructorParams&() const
    {
        return get_FileBlobConstructorParams();
    }

    SlicedBlobConstructorParams&
    get_SlicedBlobConstructorParams()
    {
        AssertSanity(TSlicedBlobConstructorParams);
        return (*(ptr_SlicedBlobConstructorParams()));
    }
    const SlicedBlobConstructorParams&
    get_SlicedBlobConstructorParams() const
    {
        AssertSanity(TSlicedBlobConstructorParams);
        return (*(constptr_SlicedBlobConstructorParams()));
    }
    operator SlicedBlobConstructorParams&()
    {
        return get_SlicedBlobConstructorParams();
    }
    operator const SlicedBlobConstructorParams&() const
    {
        return get_SlicedBlobConstructorParams();
    }

    MysteryBlobConstructorParams&
    get_MysteryBlobConstructorParams()
    {
        AssertSanity(TMysteryBlobConstructorParams);
        return (*(ptr_MysteryBlobConstructorParams()));
    }
    const MysteryBlobConstructorParams&
    get_MysteryBlobConstructorParams() const
    {
        AssertSanity(TMysteryBlobConstructorParams);
        return (*(constptr_MysteryBlobConstructorParams()));
    }
    operator MysteryBlobConstructorParams&()
    {
        return get_MysteryBlobConstructorParams();
    }
    operator const MysteryBlobConstructorParams&() const
    {
        return get_MysteryBlobConstructorParams();
    }

private:
    Value mValue;
    Type mType;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBrowserParent;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBrowserChild;
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct PopupIPCTabContext|
//
namespace mozilla {
namespace dom {
class PopupIPCTabContext MOZ_FINAL
{
private:
    typedef mozilla::dom::PBrowserParent PBrowserParent;
    typedef mozilla::dom::PBrowserChild PBrowserChild;

public:
    PopupIPCTabContext();

    PopupIPCTabContext(
            PBrowserParent* _openerParent,
            PBrowserChild* _openerChild,
            const bool& _isBrowserElement)
    {
        Init();
        Assign(_openerParent, _openerChild, _isBrowserElement);
    }

    PopupIPCTabContext(const PopupIPCTabContext& _o)
    {
        Init();
        Assign(const_cast<PBrowserParent*>((_o).openerParent()), const_cast<PBrowserChild*>((_o).openerChild()), (_o).isBrowserElement());
    }

    ~PopupIPCTabContext();

    void
    operator=(const PopupIPCTabContext& _o)
    {
        Assign(const_cast<PBrowserParent*>((_o).openerParent()), const_cast<PBrowserChild*>((_o).openerChild()), (_o).isBrowserElement());
    }

    bool
    operator==(const PopupIPCTabContext& _o) const;

    PBrowserParent*&
    openerParent()
    {
        return openerParent_;
    }
    PBrowserParent*
    openerParent() const
    {
        return openerParent_;
    }

    PBrowserChild*&
    openerChild()
    {
        return openerChild_;
    }
    PBrowserChild*
    openerChild() const
    {
        return openerChild_;
    }

    bool&
    isBrowserElement()
    {
        return isBrowserElement_;
    }
    const bool&
    isBrowserElement() const
    {
        return isBrowserElement_;
    }

private:
    void
    Init();

    void
    Assign(
            PBrowserParent* _openerParent,
            PBrowserChild* _openerChild,
            const bool& _isBrowserElement);

    PBrowserParent* openerParent_;
    PBrowserChild* openerChild_;
    bool isBrowserElement_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct AppFrameIPCTabContext|
//
namespace mozilla {
namespace dom {
class AppFrameIPCTabContext MOZ_FINAL
{
private:

public:
    AppFrameIPCTabContext();

    AppFrameIPCTabContext(
            const uint32_t& _ownAppId,
            const uint32_t& _appFrameOwnerAppId)
    {
        Init();
        Assign(_ownAppId, _appFrameOwnerAppId);
    }

    AppFrameIPCTabContext(const AppFrameIPCTabContext& _o)
    {
        Init();
        Assign((_o).ownAppId(), (_o).appFrameOwnerAppId());
    }

    ~AppFrameIPCTabContext();

    void
    operator=(const AppFrameIPCTabContext& _o)
    {
        Assign((_o).ownAppId(), (_o).appFrameOwnerAppId());
    }

    bool
    operator==(const AppFrameIPCTabContext& _o) const;

    uint32_t&
    ownAppId()
    {
        return ownAppId_;
    }
    const uint32_t&
    ownAppId() const
    {
        return ownAppId_;
    }

    uint32_t&
    appFrameOwnerAppId()
    {
        return appFrameOwnerAppId_;
    }
    const uint32_t&
    appFrameOwnerAppId() const
    {
        return appFrameOwnerAppId_;
    }

private:
    void
    Init();

    void
    Assign(
            const uint32_t& _ownAppId,
            const uint32_t& _appFrameOwnerAppId);

    uint32_t ownAppId_;
    uint32_t appFrameOwnerAppId_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct BrowserFrameIPCTabContext|
//
namespace mozilla {
namespace dom {
class BrowserFrameIPCTabContext MOZ_FINAL
{
private:

public:
    BrowserFrameIPCTabContext();

    BrowserFrameIPCTabContext(const uint32_t& _browserFrameOwnerAppId)
    {
        Init();
        Assign(_browserFrameOwnerAppId);
    }

    BrowserFrameIPCTabContext(const BrowserFrameIPCTabContext& _o)
    {
        Init();
        Assign((_o).browserFrameOwnerAppId());
    }

    ~BrowserFrameIPCTabContext();

    void
    operator=(const BrowserFrameIPCTabContext& _o)
    {
        Assign((_o).browserFrameOwnerAppId());
    }

    bool
    operator==(const BrowserFrameIPCTabContext& _o) const;

    uint32_t&
    browserFrameOwnerAppId()
    {
        return browserFrameOwnerAppId_;
    }
    const uint32_t&
    browserFrameOwnerAppId() const
    {
        return browserFrameOwnerAppId_;
    }

private:
    void
    Init();

    void
    Assign(const uint32_t& _browserFrameOwnerAppId);

    uint32_t browserFrameOwnerAppId_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct VanillaFrameIPCTabContext|
//
namespace mozilla {
namespace dom {
class VanillaFrameIPCTabContext MOZ_FINAL
{
private:

public:
    VanillaFrameIPCTabContext()
    {
        Init();
        Assign();
    }

    VanillaFrameIPCTabContext(const VanillaFrameIPCTabContext& _o)
    {
        Init();
        Assign();
    }

    ~VanillaFrameIPCTabContext();

    void
    operator=(const VanillaFrameIPCTabContext& _o)
    {
        Assign();
    }

    bool
    operator==(const VanillaFrameIPCTabContext& _o) const;

private:
    void
    Init();

    void
    Assign();

};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PopupIPCTabContext;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class AppFrameIPCTabContext;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class BrowserFrameIPCTabContext;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class VanillaFrameIPCTabContext;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |union IPCTabAppBrowserContext|
//
namespace mozilla {
namespace dom {
class IPCTabAppBrowserContext MOZ_FINAL
{
public:
    enum Type {
        T__None,
        TPopupIPCTabContext = 1,
        TAppFrameIPCTabContext,
        TBrowserFrameIPCTabContext,
        TVanillaFrameIPCTabContext,
        T__Last = TVanillaFrameIPCTabContext
    };

private:
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef PopupIPCTabContext PopupIPCTabContext__tdef;
    typedef AppFrameIPCTabContext AppFrameIPCTabContext__tdef;
    typedef BrowserFrameIPCTabContext BrowserFrameIPCTabContext__tdef;
    typedef VanillaFrameIPCTabContext VanillaFrameIPCTabContext__tdef;

    union Value {
        char VPopupIPCTabContext[sizeof(PopupIPCTabContext)];
        char VAppFrameIPCTabContext[sizeof(AppFrameIPCTabContext)];
        char VBrowserFrameIPCTabContext[sizeof(BrowserFrameIPCTabContext)];
        char VVanillaFrameIPCTabContext[sizeof(VanillaFrameIPCTabContext)];
    };

    PopupIPCTabContext*
    ptr_PopupIPCTabContext()
    {
        return reinterpret_cast<PopupIPCTabContext*>((&((mValue).VPopupIPCTabContext)));
    }
    const PopupIPCTabContext* const
    constptr_PopupIPCTabContext() const
    {
        return reinterpret_cast<const PopupIPCTabContext* const>((&((mValue).VPopupIPCTabContext)));
    }
    AppFrameIPCTabContext*
    ptr_AppFrameIPCTabContext()
    {
        return reinterpret_cast<AppFrameIPCTabContext*>((&((mValue).VAppFrameIPCTabContext)));
    }
    const AppFrameIPCTabContext* const
    constptr_AppFrameIPCTabContext() const
    {
        return reinterpret_cast<const AppFrameIPCTabContext* const>((&((mValue).VAppFrameIPCTabContext)));
    }
    BrowserFrameIPCTabContext*
    ptr_BrowserFrameIPCTabContext()
    {
        return reinterpret_cast<BrowserFrameIPCTabContext*>((&((mValue).VBrowserFrameIPCTabContext)));
    }
    const BrowserFrameIPCTabContext* const
    constptr_BrowserFrameIPCTabContext() const
    {
        return reinterpret_cast<const BrowserFrameIPCTabContext* const>((&((mValue).VBrowserFrameIPCTabContext)));
    }
    VanillaFrameIPCTabContext*
    ptr_VanillaFrameIPCTabContext()
    {
        return reinterpret_cast<VanillaFrameIPCTabContext*>((&((mValue).VVanillaFrameIPCTabContext)));
    }
    const VanillaFrameIPCTabContext* const
    constptr_VanillaFrameIPCTabContext() const
    {
        return reinterpret_cast<const VanillaFrameIPCTabContext* const>((&((mValue).VVanillaFrameIPCTabContext)));
    }

    bool
    MaybeDestroy(Type aNewType);

    void
    AssertSanity() const
    {
        NS_ABORT_IF_FALSE((T__None) <= (mType), "invalid type tag");
        NS_ABORT_IF_FALSE((mType) <= (T__Last), "invalid type tag");
    }
    void
    AssertSanity(Type aType) const
    {
        AssertSanity();
        NS_ABORT_IF_FALSE((mType) == (aType), "unexpected type tag");
    }

public:
    IPCTabAppBrowserContext() :
        mType(T__None)
    {
    }

    IPCTabAppBrowserContext(const PopupIPCTabContext& aOther);

    IPCTabAppBrowserContext(const AppFrameIPCTabContext& aOther);

    IPCTabAppBrowserContext(const BrowserFrameIPCTabContext& aOther);

    IPCTabAppBrowserContext(const VanillaFrameIPCTabContext& aOther);

    IPCTabAppBrowserContext(const IPCTabAppBrowserContext& aOther);

    ~IPCTabAppBrowserContext();

    Type
    type() const
    {
        return mType;
    }

    IPCTabAppBrowserContext&
    operator=(const PopupIPCTabContext& aRhs);

    IPCTabAppBrowserContext&
    operator=(const AppFrameIPCTabContext& aRhs);

    IPCTabAppBrowserContext&
    operator=(const BrowserFrameIPCTabContext& aRhs);

    IPCTabAppBrowserContext&
    operator=(const VanillaFrameIPCTabContext& aRhs);

    IPCTabAppBrowserContext&
    operator=(const IPCTabAppBrowserContext& aRhs);

    bool
    operator==(const PopupIPCTabContext& aRhs) const;

    bool
    operator==(const AppFrameIPCTabContext& aRhs) const;

    bool
    operator==(const BrowserFrameIPCTabContext& aRhs) const;

    bool
    operator==(const VanillaFrameIPCTabContext& aRhs) const;

    bool
    operator==(const IPCTabAppBrowserContext& aRhs) const;

    PopupIPCTabContext&
    get_PopupIPCTabContext()
    {
        AssertSanity(TPopupIPCTabContext);
        return (*(ptr_PopupIPCTabContext()));
    }
    const PopupIPCTabContext&
    get_PopupIPCTabContext() const
    {
        AssertSanity(TPopupIPCTabContext);
        return (*(constptr_PopupIPCTabContext()));
    }
    operator PopupIPCTabContext&()
    {
        return get_PopupIPCTabContext();
    }
    operator const PopupIPCTabContext&() const
    {
        return get_PopupIPCTabContext();
    }

    AppFrameIPCTabContext&
    get_AppFrameIPCTabContext()
    {
        AssertSanity(TAppFrameIPCTabContext);
        return (*(ptr_AppFrameIPCTabContext()));
    }
    const AppFrameIPCTabContext&
    get_AppFrameIPCTabContext() const
    {
        AssertSanity(TAppFrameIPCTabContext);
        return (*(constptr_AppFrameIPCTabContext()));
    }
    operator AppFrameIPCTabContext&()
    {
        return get_AppFrameIPCTabContext();
    }
    operator const AppFrameIPCTabContext&() const
    {
        return get_AppFrameIPCTabContext();
    }

    BrowserFrameIPCTabContext&
    get_BrowserFrameIPCTabContext()
    {
        AssertSanity(TBrowserFrameIPCTabContext);
        return (*(ptr_BrowserFrameIPCTabContext()));
    }
    const BrowserFrameIPCTabContext&
    get_BrowserFrameIPCTabContext() const
    {
        AssertSanity(TBrowserFrameIPCTabContext);
        return (*(constptr_BrowserFrameIPCTabContext()));
    }
    operator BrowserFrameIPCTabContext&()
    {
        return get_BrowserFrameIPCTabContext();
    }
    operator const BrowserFrameIPCTabContext&() const
    {
        return get_BrowserFrameIPCTabContext();
    }

    VanillaFrameIPCTabContext&
    get_VanillaFrameIPCTabContext()
    {
        AssertSanity(TVanillaFrameIPCTabContext);
        return (*(ptr_VanillaFrameIPCTabContext()));
    }
    const VanillaFrameIPCTabContext&
    get_VanillaFrameIPCTabContext() const
    {
        AssertSanity(TVanillaFrameIPCTabContext);
        return (*(constptr_VanillaFrameIPCTabContext()));
    }
    operator VanillaFrameIPCTabContext&()
    {
        return get_VanillaFrameIPCTabContext();
    }
    operator const VanillaFrameIPCTabContext&() const
    {
        return get_VanillaFrameIPCTabContext();
    }

private:
    Value mValue;
    Type mType;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class IPCTabAppBrowserContext;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct IPCTabContext|
//
namespace mozilla {
namespace dom {
class IPCTabContext MOZ_FINAL
{
private:
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;

public:
    IPCTabContext();

    IPCTabContext(
            const IPCTabAppBrowserContext& _appBrowserContext,
            const ScrollingBehavior& _scrollingBehavior)
    {
        Init();
        Assign(_appBrowserContext, _scrollingBehavior);
    }

    IPCTabContext(const IPCTabContext& _o)
    {
        Init();
        Assign((_o).appBrowserContext(), (_o).scrollingBehavior());
    }

    ~IPCTabContext();

    void
    operator=(const IPCTabContext& _o)
    {
        Assign((_o).appBrowserContext(), (_o).scrollingBehavior());
    }

    bool
    operator==(const IPCTabContext& _o) const;

    IPCTabAppBrowserContext&
    appBrowserContext()
    {
        return appBrowserContext_;
    }
    const IPCTabAppBrowserContext&
    appBrowserContext() const
    {
        return appBrowserContext_;
    }

    ScrollingBehavior&
    scrollingBehavior()
    {
        return scrollingBehavior_;
    }
    const ScrollingBehavior&
    scrollingBehavior() const
    {
        return scrollingBehavior_;
    }

private:
    void
    Init();

    void
    Assign(
            const IPCTabAppBrowserContext& _appBrowserContext,
            const ScrollingBehavior& _scrollingBehavior);

    IPCTabAppBrowserContext appBrowserContext_;
    ScrollingBehavior scrollingBehavior_;
};
} // namespace dom
} // namespace mozilla


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |union PrefValue|
//
namespace mozilla {
namespace dom {
class PrefValue MOZ_FINAL
{
public:
    enum Type {
        T__None,
        TnsCString = 1,
        Tint32_t,
        Tbool,
        T__Last = Tbool
    };

private:
    typedef nsCString nsCString__tdef;
    typedef int32_t int32_t__tdef;
    typedef bool bool__tdef;

    union Value {
        char VnsCString[sizeof(nsCString)];
        char Vint32_t[sizeof(int32_t)];
        char Vbool[sizeof(bool)];
    };

    nsCString*
    ptr_nsCString()
    {
        return reinterpret_cast<nsCString*>((&((mValue).VnsCString)));
    }
    const nsCString* const
    constptr_nsCString() const
    {
        return reinterpret_cast<const nsCString* const>((&((mValue).VnsCString)));
    }
    int32_t*
    ptr_int32_t()
    {
        return reinterpret_cast<int32_t*>((&((mValue).Vint32_t)));
    }
    const int32_t* const
    constptr_int32_t() const
    {
        return reinterpret_cast<const int32_t* const>((&((mValue).Vint32_t)));
    }
    bool*
    ptr_bool()
    {
        return reinterpret_cast<bool*>((&((mValue).Vbool)));
    }
    const bool* const
    constptr_bool() const
    {
        return reinterpret_cast<const bool* const>((&((mValue).Vbool)));
    }

    bool
    MaybeDestroy(Type aNewType);

    void
    AssertSanity() const
    {
        NS_ABORT_IF_FALSE((T__None) <= (mType), "invalid type tag");
        NS_ABORT_IF_FALSE((mType) <= (T__Last), "invalid type tag");
    }
    void
    AssertSanity(Type aType) const
    {
        AssertSanity();
        NS_ABORT_IF_FALSE((mType) == (aType), "unexpected type tag");
    }

public:
    PrefValue() :
        mType(T__None)
    {
    }

    PrefValue(const nsCString& aOther);

    PrefValue(const int32_t& aOther);

    PrefValue(const bool& aOther);

    PrefValue(const PrefValue& aOther);

    ~PrefValue();

    Type
    type() const
    {
        return mType;
    }

    PrefValue&
    operator=(const nsCString& aRhs);

    PrefValue&
    operator=(const int32_t& aRhs);

    PrefValue&
    operator=(const bool& aRhs);

    PrefValue&
    operator=(const PrefValue& aRhs);

    bool
    operator==(const nsCString& aRhs) const;

    bool
    operator==(const int32_t& aRhs) const;

    bool
    operator==(const bool& aRhs) const;

    bool
    operator==(const PrefValue& aRhs) const;

    nsCString&
    get_nsCString()
    {
        AssertSanity(TnsCString);
        return (*(ptr_nsCString()));
    }
    const nsCString&
    get_nsCString() const
    {
        AssertSanity(TnsCString);
        return (*(constptr_nsCString()));
    }
    operator nsCString&()
    {
        return get_nsCString();
    }
    operator const nsCString&() const
    {
        return get_nsCString();
    }

    int32_t&
    get_int32_t()
    {
        AssertSanity(Tint32_t);
        return (*(ptr_int32_t()));
    }
    const int32_t&
    get_int32_t() const
    {
        AssertSanity(Tint32_t);
        return (*(constptr_int32_t()));
    }
    operator int32_t&()
    {
        return get_int32_t();
    }
    operator const int32_t&() const
    {
        return get_int32_t();
    }

    bool&
    get_bool()
    {
        AssertSanity(Tbool);
        return (*(ptr_bool()));
    }
    const bool&
    get_bool() const
    {
        AssertSanity(Tbool);
        return (*(constptr_bool()));
    }
    operator bool&()
    {
        return get_bool();
    }
    operator const bool&() const
    {
        return get_bool();
    }

private:
    Value mValue;
    Type mType;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PrefValue;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |union MaybePrefValue|
//
namespace mozilla {
namespace dom {
class MaybePrefValue MOZ_FINAL
{
public:
    enum Type {
        T__None,
        TPrefValue = 1,
        Tnull_t,
        T__Last = Tnull_t
    };

private:
    typedef mozilla::dom::PrefValue PrefValue;
    typedef mozilla::null_t null_t;
    typedef PrefValue PrefValue__tdef;
    typedef null_t null_t__tdef;

    union Value {
        char VPrefValue[sizeof(PrefValue)];
        char Vnull_t[sizeof(null_t)];
    };

    PrefValue*
    ptr_PrefValue()
    {
        return reinterpret_cast<PrefValue*>((&((mValue).VPrefValue)));
    }
    const PrefValue* const
    constptr_PrefValue() const
    {
        return reinterpret_cast<const PrefValue* const>((&((mValue).VPrefValue)));
    }
    null_t*
    ptr_null_t()
    {
        return reinterpret_cast<null_t*>((&((mValue).Vnull_t)));
    }
    const null_t* const
    constptr_null_t() const
    {
        return reinterpret_cast<const null_t* const>((&((mValue).Vnull_t)));
    }

    bool
    MaybeDestroy(Type aNewType);

    void
    AssertSanity() const
    {
        NS_ABORT_IF_FALSE((T__None) <= (mType), "invalid type tag");
        NS_ABORT_IF_FALSE((mType) <= (T__Last), "invalid type tag");
    }
    void
    AssertSanity(Type aType) const
    {
        AssertSanity();
        NS_ABORT_IF_FALSE((mType) == (aType), "unexpected type tag");
    }

public:
    MaybePrefValue() :
        mType(T__None)
    {
    }

    MaybePrefValue(const PrefValue& aOther);

    MaybePrefValue(const null_t& aOther);

    MaybePrefValue(const MaybePrefValue& aOther);

    ~MaybePrefValue();

    Type
    type() const
    {
        return mType;
    }

    MaybePrefValue&
    operator=(const PrefValue& aRhs);

    MaybePrefValue&
    operator=(const null_t& aRhs);

    MaybePrefValue&
    operator=(const MaybePrefValue& aRhs);

    bool
    operator==(const PrefValue& aRhs) const;

    bool
    operator==(const null_t& aRhs) const;

    bool
    operator==(const MaybePrefValue& aRhs) const;

    PrefValue&
    get_PrefValue()
    {
        AssertSanity(TPrefValue);
        return (*(ptr_PrefValue()));
    }
    const PrefValue&
    get_PrefValue() const
    {
        AssertSanity(TPrefValue);
        return (*(constptr_PrefValue()));
    }
    operator PrefValue&()
    {
        return get_PrefValue();
    }
    operator const PrefValue&() const
    {
        return get_PrefValue();
    }

    null_t&
    get_null_t()
    {
        AssertSanity(Tnull_t);
        return (*(ptr_null_t()));
    }
    const null_t&
    get_null_t() const
    {
        AssertSanity(Tnull_t);
        return (*(constptr_null_t()));
    }
    operator null_t&()
    {
        return get_null_t();
    }
    operator const null_t&() const
    {
        return get_null_t();
    }

private:
    Value mValue;
    Type mType;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class MaybePrefValue;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct PrefSetting|
//
namespace mozilla {
namespace dom {
class PrefSetting MOZ_FINAL
{
private:
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;

public:
    PrefSetting();

    PrefSetting(
            const nsCString& _name,
            const MaybePrefValue& _defaultValue,
            const MaybePrefValue& _userValue)
    {
        Init();
        Assign(_name, _defaultValue, _userValue);
    }

    PrefSetting(const PrefSetting& _o)
    {
        Init();
        Assign((_o).name(), (_o).defaultValue(), (_o).userValue());
    }

    ~PrefSetting();

    void
    operator=(const PrefSetting& _o)
    {
        Assign((_o).name(), (_o).defaultValue(), (_o).userValue());
    }

    bool
    operator==(const PrefSetting& _o) const;

    nsCString&
    name()
    {
        return name_;
    }
    const nsCString&
    name() const
    {
        return name_;
    }

    MaybePrefValue&
    defaultValue()
    {
        return defaultValue_;
    }
    const MaybePrefValue&
    defaultValue() const
    {
        return defaultValue_;
    }

    MaybePrefValue&
    userValue()
    {
        return userValue_;
    }
    const MaybePrefValue&
    userValue() const
    {
        return userValue_;
    }

private:
    void
    Init();

    void
    Assign(
            const nsCString& _name,
            const MaybePrefValue& _defaultValue,
            const MaybePrefValue& _userValue);

    nsCString name_;
    MaybePrefValue defaultValue_;
    MaybePrefValue userValue_;
};
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PContentChild and PContentParent
//
namespace mozilla {
namespace dom {
namespace PContent {

enum State {
    __Dead,
    __Null,
    __Error,
    __Dying,
    __Start = __Null
};

enum MessageType {
    PContentStart = PContentMsgStart << 16,
    PContentPreStart = (PContentMsgStart << 16) - 1,
    Msg_PBrowserConstructor__ID,
    Reply_PBrowserConstructor__ID,
    Msg_PBlobConstructor__ID,
    Reply_PBlobConstructor__ID,
    Msg_PMemoryReportRequestConstructor__ID,
    Reply_PMemoryReportRequestConstructor__ID,
    Msg_AudioChannelNotify__ID,
    Msg_DumpMemoryReportsToFile__ID,
    Msg_DumpGCAndCCLogsToFile__ID,
    Msg_PTestShellConstructor__ID,
    Reply_PTestShellConstructor__ID,
    Msg_RegisterChrome__ID,
    Msg_SetOffline__ID,
    Msg_NotifyVisited__ID,
    Msg_PreferenceUpdate__ID,
    Msg_NotifyAlertsObserver__ID,
    Msg_GeolocationUpdate__ID,
    Msg_AddPermission__ID,
    Msg_ScreenSizeChanged__ID,
    Msg_FlushMemory__ID,
    Msg_GarbageCollect__ID,
    Msg_CycleCollect__ID,
    Msg_ActivateA11y__ID,
    Msg_AppInfo__ID,
    Msg_LastPrivateDocShellDestroyed__ID,
    Msg_FilePathUpdate__ID,
    Msg_FileSystemUpdate__ID,
    Msg_GetProcessAttributes__ID,
    Reply_GetProcessAttributes__ID,
    Msg_GetXPCOMProcessAttributes__ID,
    Reply_GetXPCOMProcessAttributes__ID,
    Msg_PDeviceStorageRequestConstructor__ID,
    Reply_PDeviceStorageRequestConstructor__ID,
    Msg_PCrashReporterConstructor__ID,
    Reply_PCrashReporterConstructor__ID,
    Msg_PHalConstructor__ID,
    Reply_PHalConstructor__ID,
    Msg_PIndexedDBConstructor__ID,
    Reply_PIndexedDBConstructor__ID,
    Msg_PNeckoConstructor__ID,
    Reply_PNeckoConstructor__ID,
    Msg_PSmsConstructor__ID,
    Reply_PSmsConstructor__ID,
    Msg_PStorageConstructor__ID,
    Reply_PStorageConstructor__ID,
    Msg_PBluetoothConstructor__ID,
    Reply_PBluetoothConstructor__ID,
    Msg_StartVisitedQuery__ID,
    Msg_VisitURI__ID,
    Msg_SetURITitle__ID,
    Msg_ShowFilePicker__ID,
    Reply_ShowFilePicker__ID,
    Msg_LoadURIExternal__ID,
    Msg_ReadPrefsArray__ID,
    Reply_ReadPrefsArray__ID,
    Msg_ReadFontList__ID,
    Reply_ReadFontList__ID,
    Msg_SyncMessage__ID,
    Reply_SyncMessage__ID,
    Msg_ShowAlertNotification__ID,
    Msg_PExternalHelperAppConstructor__ID,
    Reply_PExternalHelperAppConstructor__ID,
    Msg_AddGeolocationListener__ID,
    Msg_RemoveGeolocationListener__ID,
    Msg_SetGeolocationHigherAccuracy__ID,
    Msg_ConsoleMessage__ID,
    Msg_ScriptError__ID,
    Msg_ReadPermissions__ID,
    Reply_ReadPermissions__ID,
    Msg_SetClipboardText__ID,
    Msg_GetClipboardText__ID,
    Reply_GetClipboardText__ID,
    Msg_EmptyClipboard__ID,
    Msg_ClipboardHasText__ID,
    Reply_ClipboardHasText__ID,
    Msg_GetSystemColors__ID,
    Reply_GetSystemColors__ID,
    Msg_GetIconForExtension__ID,
    Reply_GetIconForExtension__ID,
    Msg_GetShowPasswordSetting__ID,
    Reply_GetShowPasswordSetting__ID,
    Msg_PrivateDocShellsExist__ID,
    Msg_FirstIdle__ID,
    Msg_AudioChannelGetMuted__ID,
    Reply_AudioChannelGetMuted__ID,
    Msg_AudioChannelRegisterType__ID,
    Msg_AudioChannelUnregisterType__ID,
    Msg_AsyncMessage__ID,
    PContentEnd
};

bool
Transition(
        State from,
        mozilla::ipc::Trigger trigger,
        State* next);

class Msg_PBrowserConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PBrowserConstructor__ID
    };
    Msg_PBrowserConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PBrowserConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PBrowserConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PBrowserConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PBrowserConstructor__ID
    };
    Reply_PBrowserConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PBrowserConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PBrowserConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PBlobConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PBlobConstructor__ID
    };
    Msg_PBlobConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PBlobConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PBlobConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PBlobConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PBlobConstructor__ID
    };
    Reply_PBlobConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PBlobConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PBlobConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PMemoryReportRequestConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PMemoryReportRequestConstructor__ID
    };
    Msg_PMemoryReportRequestConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PMemoryReportRequestConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PMemoryReportRequestConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PMemoryReportRequestConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PMemoryReportRequestConstructor__ID
    };
    Reply_PMemoryReportRequestConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PMemoryReportRequestConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PMemoryReportRequestConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AudioChannelNotify :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AudioChannelNotify__ID
    };
    Msg_AudioChannelNotify() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AudioChannelNotify")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AudioChannelNotify(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_DumpMemoryReportsToFile :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_DumpMemoryReportsToFile__ID
    };
    Msg_DumpMemoryReportsToFile() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_DumpMemoryReportsToFile")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_DumpMemoryReportsToFile(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_DumpGCAndCCLogsToFile :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_DumpGCAndCCLogsToFile__ID
    };
    Msg_DumpGCAndCCLogsToFile() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_DumpGCAndCCLogsToFile")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_DumpGCAndCCLogsToFile(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PTestShellConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PTestShellConstructor__ID
    };
    Msg_PTestShellConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PTestShellConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PTestShellConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PTestShellConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PTestShellConstructor__ID
    };
    Reply_PTestShellConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PTestShellConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PTestShellConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_RegisterChrome :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_RegisterChrome__ID
    };
    Msg_RegisterChrome() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_RegisterChrome")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_RegisterChrome(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_SetOffline :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_SetOffline__ID
    };
    Msg_SetOffline() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_SetOffline")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_SetOffline(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_NotifyVisited :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_NotifyVisited__ID
    };
    Msg_NotifyVisited() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_NotifyVisited")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_NotifyVisited(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PreferenceUpdate :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PreferenceUpdate__ID
    };
    Msg_PreferenceUpdate() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PreferenceUpdate")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PreferenceUpdate(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_NotifyAlertsObserver :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_NotifyAlertsObserver__ID
    };
    Msg_NotifyAlertsObserver() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_NotifyAlertsObserver")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_NotifyAlertsObserver(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GeolocationUpdate :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GeolocationUpdate__ID
    };
    Msg_GeolocationUpdate() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GeolocationUpdate")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GeolocationUpdate(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AddPermission :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AddPermission__ID
    };
    Msg_AddPermission() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AddPermission")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AddPermission(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ScreenSizeChanged :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ScreenSizeChanged__ID
    };
    Msg_ScreenSizeChanged() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ScreenSizeChanged")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ScreenSizeChanged(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_FlushMemory :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_FlushMemory__ID
    };
    Msg_FlushMemory() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_FlushMemory")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_FlushMemory(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GarbageCollect :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GarbageCollect__ID
    };
    Msg_GarbageCollect() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GarbageCollect")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GarbageCollect(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_CycleCollect :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_CycleCollect__ID
    };
    Msg_CycleCollect() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_CycleCollect")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_CycleCollect(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ActivateA11y :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ActivateA11y__ID
    };
    Msg_ActivateA11y() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ActivateA11y")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ActivateA11y(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AppInfo :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AppInfo__ID
    };
    Msg_AppInfo() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AppInfo")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AppInfo(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_LastPrivateDocShellDestroyed :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_LastPrivateDocShellDestroyed__ID
    };
    Msg_LastPrivateDocShellDestroyed() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_LastPrivateDocShellDestroyed")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_LastPrivateDocShellDestroyed(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_FilePathUpdate :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_FilePathUpdate__ID
    };
    Msg_FilePathUpdate() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_FilePathUpdate")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_FilePathUpdate(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_FileSystemUpdate :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_FileSystemUpdate__ID
    };
    Msg_FileSystemUpdate() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_FileSystemUpdate")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_FileSystemUpdate(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GetProcessAttributes :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GetProcessAttributes__ID
    };
    Msg_GetProcessAttributes() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GetProcessAttributes")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GetProcessAttributes(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_GetProcessAttributes :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_GetProcessAttributes__ID
    };
    Reply_GetProcessAttributes() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_GetProcessAttributes")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_GetProcessAttributes(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GetXPCOMProcessAttributes :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GetXPCOMProcessAttributes__ID
    };
    Msg_GetXPCOMProcessAttributes() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GetXPCOMProcessAttributes")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GetXPCOMProcessAttributes(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_GetXPCOMProcessAttributes :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_GetXPCOMProcessAttributes__ID
    };
    Reply_GetXPCOMProcessAttributes() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_GetXPCOMProcessAttributes")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_GetXPCOMProcessAttributes(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PDeviceStorageRequestConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PDeviceStorageRequestConstructor__ID
    };
    Msg_PDeviceStorageRequestConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PDeviceStorageRequestConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PDeviceStorageRequestConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PDeviceStorageRequestConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PDeviceStorageRequestConstructor__ID
    };
    Reply_PDeviceStorageRequestConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PDeviceStorageRequestConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PDeviceStorageRequestConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PCrashReporterConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PCrashReporterConstructor__ID
    };
    Msg_PCrashReporterConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PCrashReporterConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PCrashReporterConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PCrashReporterConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PCrashReporterConstructor__ID
    };
    Reply_PCrashReporterConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PCrashReporterConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PCrashReporterConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PHalConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PHalConstructor__ID
    };
    Msg_PHalConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PHalConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PHalConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PHalConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PHalConstructor__ID
    };
    Reply_PHalConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PHalConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PHalConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PIndexedDBConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PIndexedDBConstructor__ID
    };
    Msg_PIndexedDBConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PIndexedDBConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PIndexedDBConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PIndexedDBConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PIndexedDBConstructor__ID
    };
    Reply_PIndexedDBConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PIndexedDBConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PIndexedDBConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PNeckoConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PNeckoConstructor__ID
    };
    Msg_PNeckoConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PNeckoConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PNeckoConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PNeckoConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PNeckoConstructor__ID
    };
    Reply_PNeckoConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PNeckoConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PNeckoConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PSmsConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PSmsConstructor__ID
    };
    Msg_PSmsConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PSmsConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PSmsConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PSmsConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PSmsConstructor__ID
    };
    Reply_PSmsConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PSmsConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PSmsConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PStorageConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PStorageConstructor__ID
    };
    Msg_PStorageConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PStorageConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PStorageConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PStorageConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PStorageConstructor__ID
    };
    Reply_PStorageConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PStorageConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PStorageConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PBluetoothConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PBluetoothConstructor__ID
    };
    Msg_PBluetoothConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PBluetoothConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PBluetoothConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PBluetoothConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PBluetoothConstructor__ID
    };
    Reply_PBluetoothConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PBluetoothConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PBluetoothConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_StartVisitedQuery :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_StartVisitedQuery__ID
    };
    Msg_StartVisitedQuery() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_StartVisitedQuery")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_StartVisitedQuery(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_VisitURI :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_VisitURI__ID
    };
    Msg_VisitURI() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_VisitURI")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_VisitURI(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_SetURITitle :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_SetURITitle__ID
    };
    Msg_SetURITitle() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_SetURITitle")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_SetURITitle(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ShowFilePicker :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ShowFilePicker__ID
    };
    Msg_ShowFilePicker() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ShowFilePicker")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ShowFilePicker(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_ShowFilePicker :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_ShowFilePicker__ID
    };
    Reply_ShowFilePicker() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_ShowFilePicker")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_ShowFilePicker(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_LoadURIExternal :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_LoadURIExternal__ID
    };
    Msg_LoadURIExternal() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_LoadURIExternal")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_LoadURIExternal(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ReadPrefsArray :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ReadPrefsArray__ID
    };
    Msg_ReadPrefsArray() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ReadPrefsArray")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ReadPrefsArray(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_ReadPrefsArray :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_ReadPrefsArray__ID
    };
    Reply_ReadPrefsArray() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_ReadPrefsArray")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_ReadPrefsArray(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ReadFontList :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ReadFontList__ID
    };
    Msg_ReadFontList() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ReadFontList")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ReadFontList(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_ReadFontList :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_ReadFontList__ID
    };
    Reply_ReadFontList() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_ReadFontList")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_ReadFontList(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_SyncMessage :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_SyncMessage__ID
    };
    Msg_SyncMessage() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_SyncMessage")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_SyncMessage(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_SyncMessage :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_SyncMessage__ID
    };
    Reply_SyncMessage() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_SyncMessage")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_SyncMessage(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ShowAlertNotification :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ShowAlertNotification__ID
    };
    Msg_ShowAlertNotification() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ShowAlertNotification")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ShowAlertNotification(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PExternalHelperAppConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PExternalHelperAppConstructor__ID
    };
    Msg_PExternalHelperAppConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PExternalHelperAppConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PExternalHelperAppConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_PExternalHelperAppConstructor :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_PExternalHelperAppConstructor__ID
    };
    Reply_PExternalHelperAppConstructor() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_PExternalHelperAppConstructor")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_PExternalHelperAppConstructor(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AddGeolocationListener :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AddGeolocationListener__ID
    };
    Msg_AddGeolocationListener() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AddGeolocationListener")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AddGeolocationListener(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_RemoveGeolocationListener :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_RemoveGeolocationListener__ID
    };
    Msg_RemoveGeolocationListener() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_RemoveGeolocationListener")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_RemoveGeolocationListener(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_SetGeolocationHigherAccuracy :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_SetGeolocationHigherAccuracy__ID
    };
    Msg_SetGeolocationHigherAccuracy() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_SetGeolocationHigherAccuracy")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_SetGeolocationHigherAccuracy(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ConsoleMessage :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ConsoleMessage__ID
    };
    Msg_ConsoleMessage() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ConsoleMessage")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ConsoleMessage(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ScriptError :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ScriptError__ID
    };
    Msg_ScriptError() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ScriptError")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ScriptError(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ReadPermissions :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ReadPermissions__ID
    };
    Msg_ReadPermissions() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ReadPermissions")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ReadPermissions(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_ReadPermissions :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_ReadPermissions__ID
    };
    Reply_ReadPermissions() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_ReadPermissions")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_ReadPermissions(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_SetClipboardText :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_SetClipboardText__ID
    };
    Msg_SetClipboardText() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_SetClipboardText")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_SetClipboardText(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GetClipboardText :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GetClipboardText__ID
    };
    Msg_GetClipboardText() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GetClipboardText")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GetClipboardText(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_GetClipboardText :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_GetClipboardText__ID
    };
    Reply_GetClipboardText() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_GetClipboardText")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_GetClipboardText(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_EmptyClipboard :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_EmptyClipboard__ID
    };
    Msg_EmptyClipboard() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_EmptyClipboard")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_EmptyClipboard(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_ClipboardHasText :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_ClipboardHasText__ID
    };
    Msg_ClipboardHasText() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_ClipboardHasText")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_ClipboardHasText(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_ClipboardHasText :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_ClipboardHasText__ID
    };
    Reply_ClipboardHasText() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_ClipboardHasText")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_ClipboardHasText(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GetSystemColors :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GetSystemColors__ID
    };
    Msg_GetSystemColors() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GetSystemColors")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GetSystemColors(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_GetSystemColors :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_GetSystemColors__ID
    };
    Reply_GetSystemColors() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_GetSystemColors")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_GetSystemColors(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GetIconForExtension :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GetIconForExtension__ID
    };
    Msg_GetIconForExtension() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GetIconForExtension")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GetIconForExtension(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_GetIconForExtension :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_GetIconForExtension__ID
    };
    Reply_GetIconForExtension() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_GetIconForExtension")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_GetIconForExtension(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_GetShowPasswordSetting :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_GetShowPasswordSetting__ID
    };
    Msg_GetShowPasswordSetting() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_GetShowPasswordSetting")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_GetShowPasswordSetting(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_GetShowPasswordSetting :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_GetShowPasswordSetting__ID
    };
    Reply_GetShowPasswordSetting() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_GetShowPasswordSetting")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_GetShowPasswordSetting(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_PrivateDocShellsExist :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_PrivateDocShellsExist__ID
    };
    Msg_PrivateDocShellsExist() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_PrivateDocShellsExist")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_PrivateDocShellsExist(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_FirstIdle :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_FirstIdle__ID
    };
    Msg_FirstIdle() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_FirstIdle")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_FirstIdle(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AudioChannelGetMuted :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AudioChannelGetMuted__ID
    };
    Msg_AudioChannelGetMuted() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AudioChannelGetMuted")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AudioChannelGetMuted(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Reply_AudioChannelGetMuted :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Reply_AudioChannelGetMuted__ID
    };
    Reply_AudioChannelGetMuted() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Reply_AudioChannelGetMuted")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Reply_AudioChannelGetMuted(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AudioChannelRegisterType :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AudioChannelRegisterType__ID
    };
    Msg_AudioChannelRegisterType() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AudioChannelRegisterType")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AudioChannelRegisterType(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AudioChannelUnregisterType :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AudioChannelUnregisterType__ID
    };
    Msg_AudioChannelUnregisterType() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AudioChannelUnregisterType")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AudioChannelUnregisterType(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};

class Msg_AsyncMessage :
    public IPC::Message
{
private:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AppFrameIPCTabContext AppFrameIPCTabContext;
    typedef mozilla::dom::AudioChannelType AudioChannelType;
    typedef mozilla::dom::BlobConstructorParams BlobConstructorParams;
    typedef mozilla::dom::BrowserFrameIPCTabContext BrowserFrameIPCTabContext;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::DeviceStorageAddParams DeviceStorageAddParams;
    typedef mozilla::dom::DeviceStorageDeleteParams DeviceStorageDeleteParams;
    typedef mozilla::dom::DeviceStorageEnumerationParams DeviceStorageEnumerationParams;
    typedef mozilla::dom::DeviceStorageGetParams DeviceStorageGetParams;
    typedef mozilla::dom::DeviceStorageParams DeviceStorageParams;
    typedef mozilla::dom::DeviceStorageStatParams DeviceStorageStatParams;
    typedef mozilla::dom::FileBlobConstructorParams FileBlobConstructorParams;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::FontListEntry FontListEntry;
    typedef mozilla::ipc::GenericURIParams GenericURIParams;
    typedef mozilla::dom::IPCTabAppBrowserContext IPCTabAppBrowserContext;
    typedef mozilla::dom::IPCTabContext IPCTabContext;
    typedef mozilla::ipc::JARURIParams JARURIParams;
    typedef mozilla::dom::MaybePrefValue MaybePrefValue;
    typedef mozilla::dom::MysteryBlobConstructorParams MysteryBlobConstructorParams;
    typedef mozilla::dom::NativeThreadId NativeThreadId;
    typedef mozilla::dom::NormalBlobConstructorParams NormalBlobConstructorParams;
    typedef mozilla::ipc::OptionalURIParams OptionalURIParams;
    typedef IPC::Permission Permission;
    typedef mozilla::dom::PopupIPCTabContext PopupIPCTabContext;
    typedef mozilla::dom::PrefSetting PrefSetting;
    typedef mozilla::dom::PrefValue PrefValue;
    typedef IPC::Principal Principal;
    typedef mozilla::layout::ScrollingBehavior ScrollingBehavior;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SimpleURIParams SimpleURIParams;
    typedef mozilla::dom::SlicedBlobConstructorParams SlicedBlobConstructorParams;
    typedef mozilla::ipc::StandardURLParams StandardURLParams;
    typedef mozilla::ipc::StandardURLSegment StandardURLSegment;
    typedef mozilla::dom::StorageClone StorageClone;
    typedef mozilla::dom::StorageConstructData StorageConstructData;
    typedef mozilla::ipc::URIParams URIParams;
    typedef mozilla::dom::VanillaFrameIPCTabContext VanillaFrameIPCTabContext;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;

public:
    enum {
        ID = Msg_AsyncMessage__ID
    };
    Msg_AsyncMessage() :
        IPC::Message(MSG_ROUTING_NONE, ID, PRIORITY_NORMAL, COMPRESSION_NONE, "PContent::Msg_AsyncMessage")
    {
    }

    void
    Log(
            const std::string& __pfx,
            FILE* __outf) const
    {
        std::string __logmsg;
        StringAppendF((&(__logmsg)), "[time:%" PRId64 "][%d]", PR_Now(), base::GetCurrentProcId());
        (__logmsg).append(__pfx);
        (__logmsg).append("Msg_AsyncMessage(");

        (__logmsg).append("[TODO])\n");
        fputs((__logmsg).c_str(), __outf);
    }
};



} // namespace PContent
} // namespace dom
} // namespace mozilla

#endif // ifndef PContent_h
