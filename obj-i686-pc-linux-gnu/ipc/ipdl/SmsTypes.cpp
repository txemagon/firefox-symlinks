//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/dom/sms/SmsTypes.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct SmsSegmentInfoData|
//
namespace mozilla {
namespace dom {
namespace sms {
SmsSegmentInfoData::SmsSegmentInfoData()
{
    Init();
}

SmsSegmentInfoData::~SmsSegmentInfoData()
{
}

bool
SmsSegmentInfoData::operator==(const SmsSegmentInfoData& _o) const
{
    if ((!((segments()) == ((_o).segments())))) {
        return false;
    }
    if ((!((charsPerSegment()) == ((_o).charsPerSegment())))) {
        return false;
    }
    if ((!((charsAvailableInLastSegment()) == ((_o).charsAvailableInLastSegment())))) {
        return false;
    }
    return true;
}

void
SmsSegmentInfoData::Init()
{
}

void
SmsSegmentInfoData::Assign(
        const int32_t& _segments,
        const int32_t& _charsPerSegment,
        const int32_t& _charsAvailableInLastSegment)
{
    segments_ = _segments;
    charsPerSegment_ = _charsPerSegment;
    charsAvailableInLastSegment_ = _charsAvailableInLastSegment;
}

} // namespace sms
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct SmsMessageData|
//
namespace mozilla {
namespace dom {
namespace sms {
SmsMessageData::SmsMessageData()
{
    Init();
}

SmsMessageData::~SmsMessageData()
{
}

bool
SmsMessageData::operator==(const SmsMessageData& _o) const
{
    if ((!((id()) == ((_o).id())))) {
        return false;
    }
    if ((!((delivery()) == ((_o).delivery())))) {
        return false;
    }
    if ((!((deliveryStatus()) == ((_o).deliveryStatus())))) {
        return false;
    }
    if ((!((sender()) == ((_o).sender())))) {
        return false;
    }
    if ((!((receiver()) == ((_o).receiver())))) {
        return false;
    }
    if ((!((body()) == ((_o).body())))) {
        return false;
    }
    if ((!((messageClass()) == ((_o).messageClass())))) {
        return false;
    }
    if ((!((timestamp()) == ((_o).timestamp())))) {
        return false;
    }
    if ((!((read()) == ((_o).read())))) {
        return false;
    }
    return true;
}

void
SmsMessageData::Init()
{
}

void
SmsMessageData::Assign(
        const int32_t& _id,
        const DeliveryState& _delivery,
        const DeliveryStatus& _deliveryStatus,
        const nsString& _sender,
        const nsString& _receiver,
        const nsString& _body,
        const MessageClass& _messageClass,
        const uint64_t& _timestamp,
        const bool& _read)
{
    id_ = _id;
    delivery_ = _delivery;
    deliveryStatus_ = _deliveryStatus;
    sender_ = _sender;
    receiver_ = _receiver;
    body_ = _body;
    messageClass_ = _messageClass;
    timestamp_ = _timestamp;
    read_ = _read;
}

} // namespace sms
} // namespace dom
} // namespace mozilla
