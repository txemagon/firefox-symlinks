//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/dom/DOMTypes.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct ClonedMessageData|
//
namespace mozilla {
namespace dom {
ClonedMessageData::ClonedMessageData()
{
    Init();
}

ClonedMessageData::~ClonedMessageData()
{
}

bool
ClonedMessageData::operator==(const ClonedMessageData& _o) const
{
    if ((!((data()) == ((_o).data())))) {
        return false;
    }
    if ((!((blobsParent()) == ((_o).blobsParent())))) {
        return false;
    }
    if ((!((blobsChild()) == ((_o).blobsChild())))) {
        return false;
    }
    return true;
}

void
ClonedMessageData::Init()
{
}

void
ClonedMessageData::Assign(
        const SerializedStructuredCloneBuffer& _data,
        const InfallibleTArray<PBlobParent*>& _blobsParent,
        const InfallibleTArray<PBlobChild*>& _blobsChild)
{
    data_ = _data;
    blobsParent_ = _blobsParent;
    blobsChild_ = _blobsChild;
}

} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct NormalBlobConstructorParams|
//
namespace mozilla {
namespace dom {
NormalBlobConstructorParams::NormalBlobConstructorParams()
{
    Init();
}

NormalBlobConstructorParams::~NormalBlobConstructorParams()
{
}

bool
NormalBlobConstructorParams::operator==(const NormalBlobConstructorParams& _o) const
{
    if ((!((contentType()) == ((_o).contentType())))) {
        return false;
    }
    if ((!((length()) == ((_o).length())))) {
        return false;
    }
    return true;
}

void
NormalBlobConstructorParams::Init()
{
}

void
NormalBlobConstructorParams::Assign(
        const nsString& _contentType,
        const uint64_t& _length)
{
    contentType_ = _contentType;
    length_ = _length;
}

} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct FileBlobConstructorParams|
//
namespace mozilla {
namespace dom {
FileBlobConstructorParams::FileBlobConstructorParams()
{
    Init();
}

FileBlobConstructorParams::~FileBlobConstructorParams()
{
}

bool
FileBlobConstructorParams::operator==(const FileBlobConstructorParams& _o) const
{
    if ((!((name()) == ((_o).name())))) {
        return false;
    }
    if ((!((contentType()) == ((_o).contentType())))) {
        return false;
    }
    if ((!((length()) == ((_o).length())))) {
        return false;
    }
    if ((!((modDate()) == ((_o).modDate())))) {
        return false;
    }
    return true;
}

void
FileBlobConstructorParams::Init()
{
}

void
FileBlobConstructorParams::Assign(
        const nsString& _name,
        const nsString& _contentType,
        const uint64_t& _length,
        const uint64_t& _modDate)
{
    name_ = _name;
    contentType_ = _contentType;
    length_ = _length;
    modDate_ = _modDate;
}

} // namespace dom
} // namespace mozilla
